package leetcode.剑指;


/**
 * 给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。
 *
 * 单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。
 *
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 *
 *
 *
 *
 * 这种题目，肯定是要去搜索的，不搜索怎么找到目标呢？程序很笨～～
 */
public class 剑指offer12 {

    //DFS深度优先搜索+剪枝
    //递归情况：当前位于 数组[x][y],在目标字符word的k索引处
    //递归 终止条件：1。数组索引越界；2。当前矩阵元素与k索引处字符不符；

    //返回true：k=len(word) - 1.

    //可向上下左右递归，使用或（只要有一条路合适即可）
    //因为数组字符元素只能使用一次，使用过之后，替换为""
    //还原矩阵时，""还原为word[k]





}
